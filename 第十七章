多态
1、多态是一个OOP特性，它使对象能在收到方法调用时确定要调用哪个方法实现。也被称为后期绑定或运行时绑定，动态绑定。
2、多态实例：
    A a=new B();
  条件：
    （1）A是一个类，B是A的子类。
    （2）A是一个接口，B或者它的一个父类接口实现A
  备注：在编译时a的类型是A，因为编译器将不允许调用B中没有在A中定义的方法。另一方面，运行时a的类型为B。
3、在运行时，JVM决定这样将方法调用和方法体进行绑定。除了静态方法和final方法之外，Java中的方法绑定发生在运行时而不是在编译时。运行时绑定也
称为后期绑定或者动态绑定，与之相对的事前期绑定，它发生在编译或链接时。比如C语言就是前期绑定的。
4、多态对静态方法不起作用，因为他们属于前期绑定。

注解
1、
